#include "usart.h"

void USART_Init(unsigned int ubrr) /*Jako ubrr wchodzi MYUBRR, który jest podany w nocie*/
{
	/* Set baud rate */
	UBRRH = (unsigned char) (ubrr >> 8);
	UBRRL = (unsigned char) ubrr;
	/* Enable receiver and transmitter */
	UCSRB = (1 << RXEN) | (1 << TXEN) | (1 << RXCIE); //w³¹czenie przerwania
	/* Set frame format: 8data, 1stop bit, no parity */
	UCSRC = (1 << URSEL) | (0 << USBS) | (3 << UCSZ0);

}

void USART_Transmit(unsigned char data) {
	/* Wait for empty transmit buffer */
	while (!( UCSRA & (1 << UDRE)))
		;
	/* Put data into buffer, sends the data */
	UDR = data;
}

void USART_Transmit_string(unsigned char* string) {
	char i;

	for (i = 0; i < strlen(string); i++)
		USART_Transmit(string[i]);
}

unsigned char USART_Receive(void) {
	/* Wait for data to be received */
	while (!(UCSRA & (1 << RXC)))
		;
	/* Get and return received data from buffer */
	return UDR;
}

//Przerwanie na RXC
ISR ( USART_RXC_vect ) {

	unsigned char ReceivedByte;


	mode = 2;

	ReceivedByte = USART_Receive();

	//USART_Transmit(ReceivedByte);

	usart_received[usart_receive_index] = ReceivedByte;
	usart_received[usart_receive_index + 1] = '\0';

	if (usart_receive_index >= 1)
		if ((usart_received[usart_receive_index - 1] == 13) && (usart_received[usart_receive_index] == 10))
			usart_receive_index = 0;

	usart_receive_index++;

	ready_to_send=1;

}

